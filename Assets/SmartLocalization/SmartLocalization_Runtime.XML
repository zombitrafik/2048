<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartLocalization_Runtime</name>
    </assembly>
    <members>
        <member name="T:SmartLocalization.ChangeLanguageEventHandler">
            <summary>
            Change language event handler.
            </summary>
        </member>
        <member name="T:SmartLocalization.LanguageManager">
            <summary>
            The language worker class for runtime language handling
            </summary>
        </member>
        <member name="F:SmartLocalization.LanguageManager.defaultLanguage">
            <summary>
            The default language
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.ChangeLanguage(SmartLocalization.SmartCultureInfo)">
            <summary>
            Change the language into a specified culture
            </summary>
            <param name="cultureInfo">The culture to change to</param>
        </member>
        <member name="M:SmartLocalization.LanguageManager.ChangeLanguage(System.String)">
            <summary>
            Change the language into a specified culture
            </summary>
            <param name="languageCode">The culture to change to</param>
        </member>
        <member name="M:SmartLocalization.LanguageManager.IsLanguageSupported(System.String)">
            <summary>
            Checks if the language is supported by this application
            languageName = strings like "en", "es", "sv"
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.IsLanguageSupportedEnglishName(System.String)">
            <summary>
            Checks if the language is supported with the english name. i.e. "English" "French" etc.
            </summary>
            <param name="englishName">The english name of the language</param>
            <returns>If the language is supported</returns>
        </member>
        <member name="M:SmartLocalization.LanguageManager.IsLanguageSupported(SmartLocalization.SmartCultureInfo)">
            <summary>
            Checks if a language is supported with a culture info class
            </summary>
            <param name="cultureInfo">The culture info to check</param>
            <returns>If the language is supported</returns>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetCultureInfo(System.String)">
            <summary>
            Gets the culture info from the available languages list. If the language is not supported it will return null
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetSystemLanguageEnglishName">
            <summary>
            Gets the name of the system language in an english name. 
            If its SystemLanguage.Unknown, a string with the value "Unknown" will be returned.
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetSupportedSystemLanguage">
            <summary>
            Gets the smart culture info of the system language if it is supported. otherwise it will return null
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetSupportedSystemLanguageCode">
            <summary>
            Gets the language code of the system language if it is supported. otherwise it will return an empty string.
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetTextValue(System.String)">
            <summary>
            Returns a text value in the current language for the key. Returns null if nothing is found.
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetAudioClip(System.String)">
            <summary>
            Gets the audio clip for the current language, returns null if nothing is found
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetPrefab(System.String)">
            <summary>
            Gets the prefab game object for the current language, returns null if nothing is found
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetTexture(System.String)">
            <summary>
            Gets the texture for the current language, returns null if nothing is found
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.HasKey(System.String)">
            <summary>
            Returns whether or not the key is available in the system.
            </summary>
        </member>
        <member name="M:SmartLocalization.LanguageManager.GetLocalizedObject(System.String)">
            <summary>
            Gets the localized object from the localizedObjectDataBase
            </summary>
        </member>
        <member name="P:SmartLocalization.LanguageManager.Instance">
            <summary>
            Returns an instance of the language manager. Creates a new one if no one exist. 
            If you don't want to create a new one, check the LanguageManager.HasInstance variable first.
            </summary>
        </member>
        <member name="P:SmartLocalization.LanguageManager.HasInstance">
            <summary>
            Returns if there is an active instance of the language manager in the game.
            </summary>
        </member>
        <member name="E:SmartLocalization.LanguageManager.OnChangeLanguage">
            <summary>
            Occurs when a new language is loaded and initialized
            create a delegate method(ChangeLanguage(LanguageManager thisLanguage)) and subscribe
            </summary>
        </member>
        <member name="P:SmartLocalization.LanguageManager.RawTextDatabase">
            <summary>
            Gets all the language values in raw text. NOTE: Potentially performance expensive. Use with caution.
            </summary>
        </member>
        <member name="P:SmartLocalization.LanguageManager.VerboseLogging">
            <summary>
            Set this to true if you want extensive error logging
            </summary>
        </member>
        <member name="T:SmartLocalization.LocalizedObjectType">
            <summary>
            The type of the localized object
            </summary>
        </member>
        <member name="T:SmartLocalization.LocalizedObject">
             <summary>
             The localized object, used to determine what type the string value from the .resx file is
             </summary>
             
            
        </member>
        <member name="F:SmartLocalization.LocalizedObject.objectType">
            <summary> The type of the localizedObject.</summary>
        </member>
        <member name="F:SmartLocalization.LocalizedObject.textValue">
            <summary>
            The text value of the object, all objects are converted into string values in the end, whether it's a 
            file path or a simple string value
            </summary>
        </member>
        <member name="F:SmartLocalization.LocalizedObject.thisGameObject">
            <summary>
            Variable if this object type is GAME_OBJECT
            </summary>
        </member>
        <member name="F:SmartLocalization.LocalizedObject.thisAudioClip">
            <summary>
            Variable if this object type is AUDIO
            </summary>
        </member>
        <member name="F:SmartLocalization.LocalizedObject.thisTexture">
            <summary>
            Variable if this object type is TEXTURE
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:SmartLocalization.LocalizedObject.keyTypeIdentifier" -->
        <member name="M:SmartLocalization.LocalizedObject.GetLocalizedObjectType(System.String)">
            <summary>
            Gets the LocalizedObjectType of the localized object.
            </summary>
            <returns>
            The LocalizedObjectType of the key value
            </returns>
            <param name='key'>
            The language key from the .resx file
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SmartLocalization.LocalizedObject.GetCleanKey(System.String,SmartLocalization.LocalizedObjectType)" -->
        <!-- Badly formed XML comment ignored for member "M:SmartLocalization.LocalizedObject.GetCleanKey(System.String)" -->
        <member name="M:SmartLocalization.LocalizedObject.GetFullKey(System.String)">
            <summary>
            Gets the full key value with identifiers and everything
            </summary>
            <returns>
            The full key.
            </returns>
            <param name='parsedKey'>
            Parsed key. (Clean key originally from GetCleanKey)
            </param>
        </member>
        <member name="M:SmartLocalization.LocalizedObject.GetFullKey(System.String,SmartLocalization.LocalizedObjectType)">
            <summary>
            Gets the full key value with identifiers and everything
            </summary>
            <returns>
            The full key.
            </returns>
            <param name='parsedKey'>
            Parsed key. (Clean key originally from GetCleanKey)
            </param>
        </member>
        <member name="P:SmartLocalization.LocalizedObject.ObjectType">
            <summary> Gets or sets the LocalizedObjectType of the object.</summary>
        </member>
        <member name="P:SmartLocalization.LocalizedObject.TextValue">
            <summary>
            Gets or sets the text value.
            </summary>
            <value>
            The text value of the object, all objects are converted into string values in the end, whether it's a
            file path or a simple string value.
            </value>
        </member>
        <member name="P:SmartLocalization.LocalizedObject.ThisGameObject">
            <summary>
            Variable if this object type is GAME_OBJECT. Gets or sets the this game object.
            </summary>
            <value>
            The this game object.
            </value>
        </member>
        <member name="P:SmartLocalization.LocalizedObject.ThisAudioClip">
            <summary>
            Variable if this object type is AUDIO. Gets or sets the this AudioClip.
            </summary>
            <value>
            This AudioClip.
            </value>
        </member>
        <member name="P:SmartLocalization.LocalizedObject.ThisTexture">
            <summary>
            Variable if this object type is TEXTURE. Gets or sets the this Texture.
            </summary>
        </member>
    </members>
</doc>
